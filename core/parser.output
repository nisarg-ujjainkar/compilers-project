Terminals unused in grammar

    FOR


State 51 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: code $end

    1 code: %empty
    2     | code line

    3 block: '{' code '}'

    4 line: WhileStm
    5     | IfStm
    6     | IfElse
    7     | block
    8     | assn ';'

    9 assn: VAR '=' exp

   10 IfStm: IF '(' cond ')' line

   11 IfElse: IF '(' cond ')' line ELSE line

   12 WhileStm: WHILE '(' cond ')' line

   13 cond: cond join cond
   14     | exp relop exp

   15 join: AND
   16     | OR

   17 relop: GEQ
   18      | LEQ
   19      | LT
   20      | GT
   21      | EQ
   22      | NEQ

   23 exp: VAR
   24    | NUM
   25    | exp '+' exp
   26    | exp '-' exp
   27    | exp '*' exp
   28    | exp '/' exp
   29    | '-' exp
   30    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 11 12 30
    ')' (41) 10 11 12 30
    '*' (42) 27
    '+' (43) 25
    '-' (45) 26 29
    '/' (47) 28
    ';' (59) 8
    '=' (61) 9
    '{' (123) 3
    '}' (125) 3
    error (256)
    NUM <val> (258) 24
    VAR <tptr> (259) 9 23
    WHILE (260) 12
    FOR (261)
    IF (262) 10 11
    ELSE (263) 11
    GEQ <op> (264) 17
    LEQ <op> (265) 18
    GT <op> (266) 20
    LT <op> (267) 19
    EQ <op> (268) 21
    NEQ <op> (269) 22
    AND <op> (270) 15
    OR <op> (271) 16
    NEG (272)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    code <ast> (29)
        on left: 1 2
        on right: 0 2 3
    block <ast> (30)
        on left: 3
        on right: 7
    line <ast> (31)
        on left: 4 5 6 7 8
        on right: 2 10 11 12
    assn <ast> (32)
        on left: 9
        on right: 8
    IfStm <ast> (33)
        on left: 10
        on right: 5
    IfElse <ast> (34)
        on left: 11
        on right: 6
    WhileStm <ast> (35)
        on left: 12
        on right: 4
    cond <ast> (36)
        on left: 13 14
        on right: 10 11 12 13
    join <op> (37)
        on left: 15 16
        on right: 13
    relop <op> (38)
        on left: 17 18 19 20 21 22
        on right: 14
    exp <ast> (39)
        on left: 23 24 25 26 27 28 29 30
        on right: 9 14 25 26 27 28 29 30


State 0

    0 $accept: . code $end

    $default  reduce using rule 1 (code)

    code  go to state 1


State 1

    0 $accept: code . $end
    2 code: code . line

    $end   shift, and go to state 2
    VAR    shift, and go to state 3
    WHILE  shift, and go to state 4
    IF     shift, and go to state 5
    '{'    shift, and go to state 6

    block     go to state 7
    line      go to state 8
    assn      go to state 9
    IfStm     go to state 10
    IfElse    go to state 11
    WhileStm  go to state 12


State 2

    0 $accept: code $end .

    $default  accept


State 3

    9 assn: VAR . '=' exp

    '='  shift, and go to state 13


State 4

   12 WhileStm: WHILE . '(' cond ')' line

    '('  shift, and go to state 14


State 5

   10 IfStm: IF . '(' cond ')' line
   11 IfElse: IF . '(' cond ')' line ELSE line

    '('  shift, and go to state 15


State 6

    3 block: '{' . code '}'

    $default  reduce using rule 1 (code)

    code  go to state 16


State 7

    7 line: block .

    $default  reduce using rule 7 (line)


State 8

    2 code: code line .

    $default  reduce using rule 2 (code)


State 9

    8 line: assn . ';'

    ';'  shift, and go to state 17


State 10

    5 line: IfStm .

    $default  reduce using rule 5 (line)


State 11

    6 line: IfElse .

    $default  reduce using rule 6 (line)


State 12

    4 line: WhileStm .

    $default  reduce using rule 4 (line)


State 13

    9 assn: VAR '=' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 22


State 14

   12 WhileStm: WHILE '(' . cond ')' line

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    cond  go to state 23
    exp   go to state 24


State 15

   10 IfStm: IF '(' . cond ')' line
   11 IfElse: IF '(' . cond ')' line ELSE line

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    cond  go to state 25
    exp   go to state 24


State 16

    2 code: code . line
    3 block: '{' code . '}'

    VAR    shift, and go to state 3
    WHILE  shift, and go to state 4
    IF     shift, and go to state 5
    '{'    shift, and go to state 6
    '}'    shift, and go to state 26

    block     go to state 7
    line      go to state 8
    assn      go to state 9
    IfStm     go to state 10
    IfElse    go to state 11
    WhileStm  go to state 12


State 17

    8 line: assn ';' .

    $default  reduce using rule 8 (line)


State 18

   24 exp: NUM .

    $default  reduce using rule 24 (exp)


State 19

   23 exp: VAR .

    $default  reduce using rule 23 (exp)


State 20

   29 exp: '-' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 27


State 21

   30 exp: '(' . exp ')'

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 28


State 22

    9 assn: VAR '=' exp .
   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp

    '-'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 9 (assn)


State 23

   12 WhileStm: WHILE '(' cond . ')' line
   13 cond: cond . join cond

    AND  shift, and go to state 33
    OR   shift, and go to state 34
    ')'  shift, and go to state 35

    join  go to state 36


State 24

   14 cond: exp . relop exp
   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp

    GEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    GT   shift, and go to state 39
    LT   shift, and go to state 40
    EQ   shift, and go to state 41
    NEQ  shift, and go to state 42
    '-'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    relop  go to state 43


State 25

   10 IfStm: IF '(' cond . ')' line
   11 IfElse: IF '(' cond . ')' line ELSE line
   13 cond: cond . join cond

    AND  shift, and go to state 33
    OR   shift, and go to state 34
    ')'  shift, and go to state 44

    join  go to state 36


State 26

    3 block: '{' code '}' .

    $default  reduce using rule 3 (block)


State 27

   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   29    | '-' exp .

    $default  reduce using rule 29 (exp)


State 28

   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   30    | '(' exp . ')'

    '-'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32
    ')'  shift, and go to state 45


State 29

   26 exp: exp '-' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 46


State 30

   25 exp: exp '+' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 47


State 31

   27 exp: exp '*' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 48


State 32

   28 exp: exp '/' . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 49


State 33

   15 join: AND .

    $default  reduce using rule 15 (join)


State 34

   16 join: OR .

    $default  reduce using rule 16 (join)


State 35

   12 WhileStm: WHILE '(' cond ')' . line

    VAR    shift, and go to state 3
    WHILE  shift, and go to state 4
    IF     shift, and go to state 5
    '{'    shift, and go to state 6

    block     go to state 7
    line      go to state 50
    assn      go to state 9
    IfStm     go to state 10
    IfElse    go to state 11
    WhileStm  go to state 12


State 36

   13 cond: cond join . cond

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    cond  go to state 51
    exp   go to state 24


State 37

   17 relop: GEQ .

    $default  reduce using rule 17 (relop)


State 38

   18 relop: LEQ .

    $default  reduce using rule 18 (relop)


State 39

   20 relop: GT .

    $default  reduce using rule 20 (relop)


State 40

   19 relop: LT .

    $default  reduce using rule 19 (relop)


State 41

   21 relop: EQ .

    $default  reduce using rule 21 (relop)


State 42

   22 relop: NEQ .

    $default  reduce using rule 22 (relop)


State 43

   14 cond: exp relop . exp

    NUM  shift, and go to state 18
    VAR  shift, and go to state 19
    '-'  shift, and go to state 20
    '('  shift, and go to state 21

    exp  go to state 52


State 44

   10 IfStm: IF '(' cond ')' . line
   11 IfElse: IF '(' cond ')' . line ELSE line

    VAR    shift, and go to state 3
    WHILE  shift, and go to state 4
    IF     shift, and go to state 5
    '{'    shift, and go to state 6

    block     go to state 7
    line      go to state 53
    assn      go to state 9
    IfStm     go to state 10
    IfElse    go to state 11
    WhileStm  go to state 12


State 45

   30 exp: '(' exp ')' .

    $default  reduce using rule 30 (exp)


State 46

   25 exp: exp . '+' exp
   26    | exp . '-' exp
   26    | exp '-' exp .
   27    | exp . '*' exp
   28    | exp . '/' exp

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 26 (exp)


State 47

   25 exp: exp . '+' exp
   25    | exp '+' exp .
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 25 (exp)


State 48

   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   27    | exp '*' exp .
   28    | exp . '/' exp

    $default  reduce using rule 27 (exp)


State 49

   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp
   28    | exp '/' exp .

    $default  reduce using rule 28 (exp)


State 50

   12 WhileStm: WHILE '(' cond ')' line .

    $default  reduce using rule 12 (WhileStm)


State 51

   13 cond: cond . join cond
   13     | cond join cond .

    AND  shift, and go to state 33
    OR   shift, and go to state 34

    AND       [reduce using rule 13 (cond)]
    OR        [reduce using rule 13 (cond)]
    $default  reduce using rule 13 (cond)

    join  go to state 36


State 52

   14 cond: exp relop exp .
   25 exp: exp . '+' exp
   26    | exp . '-' exp
   27    | exp . '*' exp
   28    | exp . '/' exp

    '-'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 14 (cond)


State 53

   10 IfStm: IF '(' cond ')' line .
   11 IfElse: IF '(' cond ')' line . ELSE line

    ELSE  shift, and go to state 54

    ELSE      [reduce using rule 10 (IfStm)]
    $default  reduce using rule 10 (IfStm)


State 54

   11 IfElse: IF '(' cond ')' line ELSE . line

    VAR    shift, and go to state 3
    WHILE  shift, and go to state 4
    IF     shift, and go to state 5
    '{'    shift, and go to state 6

    block     go to state 7
    line      go to state 55
    assn      go to state 9
    IfStm     go to state 10
    IfElse    go to state 11
    WhileStm  go to state 12


State 55

   11 IfElse: IF '(' cond ')' line ELSE line .

    $default  reduce using rule 11 (IfElse)
